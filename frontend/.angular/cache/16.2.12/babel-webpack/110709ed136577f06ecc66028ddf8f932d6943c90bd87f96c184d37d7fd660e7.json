{"ast":null,"code":"import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentsModule } from './components/components.module';\nimport { AppComponent } from './app.component';\nimport { NgToastModule } from \"ng-angular-popup\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgHcaptchaModule } from 'ng-hcaptcha';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { config } from \"./config\";\nimport { PopupService } from \"./popup-service/popup.service\";\nimport { PopupModule } from \"./popup-service/popup.module\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ng-hcaptcha\";\nimport * as i3 from \"ngx-skeleton-loader\";\nconst routes = [{\n  path: 'reset-password',\n  loadChildren: () => import('./pages/password/reset-password/reset-password.module').then(m => m.ResetPasswordModule)\n}, {\n  path: 'summary',\n  loadChildren: () => import('./pages/dashboard/summary/summary.module').then(m => m.SummaryModule)\n}, {\n  path: 'account-settings',\n  loadChildren: () => import('./pages/dashboard/account-settings/account-settings.module').then(m => m.AccountSettingsModule)\n}, {\n  path: '',\n  loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\n}, {\n  path: 'coming-soon',\n  loadChildren: () => import('./pages/coming-soon/coming-soon.module').then(m => m.ComingSoonModule)\n}, {\n  path: 'create-id',\n  loadChildren: () => import('./pages/create-id/create-id.module').then(m => m.CreateIdModule)\n}, {\n  path: 'change-password',\n  loadChildren: () => import('./pages/password/change-password/change-password.module').then(m => m.ChangePasswordModule)\n}, {\n  path: 'verify-email',\n  loadChildren: () => import('./pages/login/verify-email/verify-email.module').then(m => m.VerifyEmailModule)\n}, {\n  path: 'login',\n  loadChildren: () => import('./pages/login/login/login.module').then(m => m.LoginModule)\n}, {\n  path: 'authorize',\n  loadChildren: () => import('./pages/dashboard/authorize/authorize.module').then(m => m.AuthorizeModule)\n}, {\n  path: '**',\n  loadChildren: () => import('./pages/not-found/not-found.module').then(m => m.NotFoundModule)\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [CookieService, PopupService],\n      imports: [BrowserModule, RouterModule.forRoot(routes), ComponentsModule, HttpClientModule, NgToastModule, NgHcaptchaModule.forRoot({\n        siteKey: config.hcaptcha_key\n      }), NgxSkeletonLoaderModule.forRoot(), MatDialogModule, BrowserAnimationsModule, PopupModule, MatSnackBarModule, NgOtpInputModule]\n    });\n  }\n  return AppModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AppComponent],\n      imports: [BrowserModule, RouterModule.forRoot(routes), ComponentsModule, HttpClientModule, NgToastModule, NgHcaptchaModule.forRoot({\n        siteKey: config.hcaptcha_key\n      }), NgxSkeletonLoaderModule.forRoot(), MatDialogModule, BrowserAnimationsModule, PopupModule, MatSnackBarModule, NgOtpInputModule],\n      providers: [CookieService, PopupService],\n      bootstrap: [AppComponent],\n      schemas: [CUSTOM_ELEMENTS_SCHEMA]\n    }]\n  }], null, null);\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}