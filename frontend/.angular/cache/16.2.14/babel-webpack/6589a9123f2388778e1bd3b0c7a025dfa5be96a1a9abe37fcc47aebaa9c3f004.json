{"ast":null,"code":"import _asyncToGenerator from \"D:/Wulfco/Wulfco ID/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Component, Input } from '@angular/core';\nimport { WulfcoSnackbar } from \"../../snackbar/wulfco-snackbar.component\";\nimport { config } from '../../../config';\nimport { AuthCrypto } from \"../../../util/AuthCrypto\";\nimport { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../popup-service/popup.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"ng-hcaptcha\";\nimport * as i4 from \"ngx-cookie-service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"ngx-colors\";\nimport * as i7 from \"../page-components/profile-modal/profile-modal.component\";\nconst _c0 = () => [\".jpeg\", \".jpg\", \".png\"];\nexport let Profile = /*#__PURE__*/(() => {\n  class Profile {\n    dialog;\n    snackbar;\n    HCaptcha;\n    cookies;\n    userdata;\n    getUserData;\n    colorFormControl = new FormControl();\n    openColorPicker = false;\n    constructor(dialog, snackbar, HCaptcha, cookies) {\n      this.dialog = dialog;\n      this.snackbar = snackbar;\n      this.HCaptcha = HCaptcha;\n      this.cookies = cookies;\n    }\n    fieldEdited(field, value) {\n      this.userdata[field] = value.value;\n    }\n    selectColor() {\n      this.openColorPicker = true;\n    }\n    startLoadingButton(button) {\n      document.getElementById(button).setAttribute('disabled', 'true');\n      document.getElementById(button + '-loader').innerHTML = '<i class=\"fa fa-circle-o-notch fa-spin\"></i>';\n      document.getElementById(button + '-text').style.display = 'none';\n      document.getElementById(button + '-icon').style.display = 'none';\n    }\n    stopLoadingButton(button) {\n      document.getElementById(button).removeAttribute('disabled');\n      document.getElementById(button + '-text').style.display = 'inline-block';\n      document.getElementById(button + '-loader').innerHTML = '';\n      document.getElementById(button + '-icon').style.display = 'inline-block';\n    }\n    pickAvatar() {\n      document.getElementById('avatar').click();\n    }\n    resetAvatar() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.startLoadingButton(\"reset\");\n        const sessionSecret = new Uint8Array(decodeURIComponent(_this.cookies.get('ss')).split(',').map(Number));\n        const sessionToken = new Uint8Array(decodeURIComponent(_this.cookies.get('st')).split(',').map(Number));\n        const sessionId = _this.cookies.get('sid');\n        const sessionDoc = _this.cookies.get('sd');\n        const iv = new Uint8Array(decodeURIComponent(_this.cookies.get('iv')).split(',').map(Number));\n        if (sessionSecret === undefined || sessionToken === undefined || sessionId === '' || sessionDoc === '' || iv === undefined) {\n          window.location.href = '/login';\n        }\n        const importedKey = yield new AuthCrypto().ImportKey(sessionSecret);\n        const ticket = yield new AuthCrypto().AESEncrypt(JSON.stringify({\n          token: sessionToken.toString()\n        }), importedKey, iv);\n        _this.HCaptcha.verify().subscribe(res => {\n          if (res) {\n            fetch(`${config.api_url}/avatar`, {\n              method: \"DELETE\",\n              headers: {\n                \"W-SessionID\": JSON.stringify({\n                  sessionId,\n                  sessionDoc\n                }),\n                \"W-Auth\": ticket,\n                \"W-Reason\": \"avatar\",\n                \"W-HCaptcha\": res\n              }\n            }).then(res => {\n              res.json().then(data => {\n                if (data.success) {\n                  _this.snackbar.openFromComponent(WulfcoSnackbar, {\n                    data: {\n                      message: 'Avatar reset!',\n                      type: 'success',\n                      totalTime: 5000\n                    },\n                    duration: 6000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                    panelClass: ['wulfco-snackbar']\n                  });\n                  _this.getUserData();\n                  _this.stopLoadingButton(\"reset\");\n                } else {\n                  _this.snackbar.openFromComponent(WulfcoSnackbar, {\n                    data: {\n                      message: 'Failed to reset avatar!',\n                      type: 'error',\n                      totalTime: 5000\n                    },\n                    duration: 6000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                    panelClass: ['wulfco-snackbar']\n                  });\n                  _this.stopLoadingButton(\"reset\");\n                }\n              });\n            }).catch(() => {\n              _this.snackbar.openFromComponent(WulfcoSnackbar, {\n                data: {\n                  message: 'Failed to reset avatar!',\n                  type: 'error',\n                  totalTime: 5000\n                },\n                duration: 6000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: ['wulfco-snackbar']\n              });\n              _this.stopLoadingButton(\"reset\");\n            });\n          }\n        });\n      })();\n    }\n    changeAvatar(e) {\n      var _this2 = this;\n      const file = e.target.files[0];\n      if (!file) return;\n      const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/i;\n      if (!allowedExtensions.exec(file.name)) {\n        this.snackbar.openFromComponent(WulfcoSnackbar, {\n          data: {\n            message: 'File must be a .jpg, .jpeg, or .png!',\n            type: 'warning',\n            totalTime: 5000\n          },\n          duration: 6000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: ['wulfco-snackbar']\n        });\n        e.target.value = '';\n        return;\n      }\n      if (file.size < 2097152) {\n        const reader = new FileReader();\n        reader.onload = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (e2) {\n            const base64String = reader.result.toString().split(',')[1];\n            const jsonData = {\n              fileName: file.name,\n              fileSize: file.size,\n              fileType: file.type,\n              data: base64String\n            };\n            _this2.startLoadingButton(\"upload\");\n            const sessionSecret = new Uint8Array(decodeURIComponent(_this2.cookies.get('ss')).split(',').map(Number));\n            const sessionToken = new Uint8Array(decodeURIComponent(_this2.cookies.get('st')).split(',').map(Number));\n            const sessionId = _this2.cookies.get('sid');\n            const sessionDoc = _this2.cookies.get('sd');\n            const iv = new Uint8Array(decodeURIComponent(_this2.cookies.get('iv')).split(',').map(Number));\n            if (sessionSecret === undefined || sessionToken === undefined || sessionId === '' || sessionDoc === '' || iv === undefined) {\n              window.location.href = '/login';\n            }\n            const importedKey = yield new AuthCrypto().ImportKey(sessionSecret);\n            const ticket = yield new AuthCrypto().AESEncrypt(JSON.stringify({\n              token: sessionToken.toString()\n            }), importedKey, iv);\n            _this2.HCaptcha.verify().subscribe(res => {\n              if (res) {\n                fetch(`${config.api_url}/avatar`, {\n                  method: \"POST\",\n                  headers: {\n                    \"W-SessionID\": JSON.stringify({\n                      sessionId,\n                      sessionDoc\n                    }),\n                    \"W-Auth\": ticket,\n                    \"W-Reason\": \"avatar\",\n                    \"W-HCaptcha\": res,\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(jsonData)\n                }).then(res => {\n                  res.json().then(data => {\n                    if (data.success) {\n                      _this2.snackbar.openFromComponent(WulfcoSnackbar, {\n                        data: {\n                          message: 'Avatar uploaded!',\n                          type: 'success',\n                          totalTime: 5000\n                        },\n                        duration: 6000,\n                        horizontalPosition: 'center',\n                        verticalPosition: 'top',\n                        panelClass: ['wulfco-snackbar']\n                      });\n                      _this2.getUserData();\n                      _this2.stopLoadingButton(\"upload\");\n                    } else {\n                      _this2.snackbar.openFromComponent(WulfcoSnackbar, {\n                        data: {\n                          message: 'Failed to upload!',\n                          type: 'error',\n                          totalTime: 5000\n                        },\n                        duration: 6000,\n                        horizontalPosition: 'center',\n                        verticalPosition: 'top',\n                        panelClass: ['wulfco-snackbar']\n                      });\n                      _this2.stopLoadingButton(\"upload\");\n                    }\n                  });\n                }).catch(() => {\n                  _this2.snackbar.openFromComponent(WulfcoSnackbar, {\n                    data: {\n                      message: 'Failed to upload!',\n                      type: 'error',\n                      totalTime: 5000\n                    },\n                    duration: 6000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                    panelClass: ['wulfco-snackbar']\n                  });\n                  _this2.stopLoadingButton(\"upload\");\n                });\n              }\n            });\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        reader.readAsDataURL(file);\n        e.target.value = '';\n      } else {\n        e.target.value = '';\n        this.snackbar.openFromComponent(WulfcoSnackbar, {\n          data: {\n            message: 'File must be less than 2MB!',\n            type: 'warning',\n            totalTime: 5000\n          },\n          duration: 6000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: ['wulfco-snackbar']\n        });\n      }\n    }\n    static ɵfac = function Profile_Factory(t) {\n      return new (t || Profile)(i0.ɵɵdirectiveInject(i1.PopupService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.NgHcaptchaService), i0.ɵɵdirectiveInject(i4.CookieService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: Profile,\n      selectors: [[\"app-profile\"]],\n      inputs: {\n        userdata: \"userdata\",\n        getUserData: \"getUserData\"\n      },\n      decls: 61,\n      vars: 12,\n      consts: [[1, \"profile-content\"], [1, \"profile-text\", \"notselectable\"], [1, \"profile-container\"], [\"id\", \"avatar\", \"type\", \"file\", 1, \"hidden\", 3, \"change\", \"accept\"], [1, \"profile-avatar-change-wrapper\"], [1, \"profile-pointer\", \"notselectable\"], [1, \"profile-options\"], [\"id\", \"upload\", \"type\", \"button\", 1, \"profile-button\", \"button\", 3, \"click\"], [\"id\", \"upload-icon\", \"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon\"], [\"d\", \"M214 768h596v86h-596v-86zM384 682v-256h-170l298-298 298 298h-170v256h-256z\"], [\"id\", \"upload-text\", 1, \"profile-text01\"], [\"id\", \"upload-loader\", 1, \"edit-username-loader\"], [\"id\", \"reset\", \"type\", \"button\", 1, \"profile-button1\", \"button\", 3, \"click\"], [\"id\", \"reset-icon\", \"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon02\"], [\"d\", \"M726 666l-154-154 154-154-60-60-154 154-154-154-60 60 154 154-154 154 60 60 154-154 154 154zM512 86q176 0 301 125t125 301-125 301-301 125-301-125-125-301 125-301 301-125z\"], [\"id\", \"reset-text\", 1, \"profile-text02\"], [\"id\", \"reset-loader\", 1, \"edit-username-loader\"], [1, \"profile-container1\"], [1, \"profile-text03\", \"notselectable\"], [\"type\", \"text\", \"id\", \"display_name\", \"placeholder\", \"John Doe\", 1, \"profile-textinput\", \"input\", 3, \"change\", \"value\"], [1, \"profile-container2\"], [1, \"profile-text04\", \"notselectable\"], [\"type\", \"text\", \"id\", \"pronouns\", \"placeholder\", \"he/him, they/them etc...\", 1, \"profile-textinput1\", \"input\", 3, \"change\", \"value\"], [1, \"profile-container3\"], [1, \"profile-text05\", \"notselectable\"], [1, \"profile-container4\"], [1, \"profile-container5\"], [\"id\", \"select_default\", 1, \"profile-button2\", \"button\"], [\"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon04\"], [\"d\", \"M864 128l-480 480-224-224-160 160 384 384 640-640z\"], [1, \"profile-text06\"], [1, \"profile-container6\"], [\"id\", \"pick_custom_color\", 1, \"profile-button3\", \"button\", 3, \"click\"], [\"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon06\"], [\"d\", \"M296 810l344-344-82-82-344 344zM884 240q30 30 0 60l-134 134 82 82-60 60-60-60-382 380h-202v-202l380-382-60-60 60-60 82 82 134-134q12-12 30-12t30 12z\"], [\"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon08\"], [1, \"profile-text07\"], [\"ngx-colors-trigger\", \"\", 2, \"display\", \"none\", \"visibility\", \"0\", \"position\", \"absolute\", \"width\", \"115px\", \"height\", \"83px\", 3, \"open\", \"formControl\"], [1, \"profile-container7\"], [1, \"profile-text08\", \"notselectable\"], [\"id\", \"about_me\", \"maxlength\", \"200\", \"placeholder\", \"Say what you want everyone to know about you here, as long as it's within 200 characters.\", 1, \"profile-textarea\", \"textarea\", 3, \"change\", \"value\"], [1, \"profile-container8\"], [1, \"profile-text09\", \"notselectable\"], [3, \"username\", \"display_name\", \"profile_picture\", \"banner_color\", \"pronouns\", \"about_me\"], [\"id\", \"save\", \"type\", \"button\", 1, \"profile-button4\", \"button\"], [\"viewBox\", \"0 0 1024 1024\", 1, \"profile-icon10\"], [\"d\", \"M426 726l384-384-60-62-324 324-152-152-60 60zM512 86q176 0 301 125t125 301-125 301-301 125-301-125-125-301 125-301 301-125z\"], [1, \"profile-text10\"]],\n      template: function Profile_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Profile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n          i0.ɵɵlistener(\"change\", function Profile_Template_input_change_4_listener($event) {\n            return ctx.changeAvatar($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n          i0.ɵɵtext(7, \"AVATAR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function Profile_Template_button_click_9_listener() {\n            return ctx.pickAvatar();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(10, \"svg\", 8);\n          i0.ɵɵelement(11, \"path\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(12, \"span\", 10);\n          i0.ɵɵtext(13, \"Upload Avatar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function Profile_Template_button_click_15_listener() {\n            return ctx.resetAvatar();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(16, \"svg\", 13);\n          i0.ɵɵelement(17, \"path\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(18, \"span\", 15);\n          i0.ɵɵtext(19, \"Reset Avatar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"div\", 16);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 17)(22, \"span\", 18);\n          i0.ɵɵtext(23, \"DISPLAY NAME\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"input\", 19);\n          i0.ɵɵlistener(\"change\", function Profile_Template_input_change_24_listener($event) {\n            return ctx.fieldEdited(\"profile.display_name\", $event.target);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 20)(26, \"span\", 21);\n          i0.ɵɵtext(27, \"PRONOUNS\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"input\", 22);\n          i0.ɵɵlistener(\"change\", function Profile_Template_input_change_28_listener($event) {\n            return ctx.fieldEdited(\"profile.pronouns\", $event.target);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"div\", 23)(30, \"span\", 24);\n          i0.ɵɵtext(31, \"BANNER COLOR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 25)(33, \"div\", 26)(34, \"button\", 27);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(35, \"svg\", 28);\n          i0.ɵɵelement(36, \"path\", 29);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(37, \"span\", 30);\n          i0.ɵɵtext(38, \"Default\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"div\", 31)(40, \"button\", 32);\n          i0.ɵɵlistener(\"click\", function Profile_Template_button_click_40_listener() {\n            return ctx.selectColor();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(41, \"svg\", 33);\n          i0.ɵɵelement(42, \"path\", 34);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"svg\", 35);\n          i0.ɵɵelement(44, \"path\", 29);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(45, \"span\", 36);\n          i0.ɵɵtext(46, \"Custom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"ngx-colors\", 37);\n          i0.ɵɵlistener(\"open\", function Profile_Template_ngx_colors_open_47_listener() {\n            return ctx.openColorPicker;\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(48, \"div\", 38)(49, \"span\", 39);\n          i0.ɵɵtext(50, \"ABOUT ME\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"textarea\", 40);\n          i0.ɵɵlistener(\"change\", function Profile_Template_textarea_change_51_listener($event) {\n            return ctx.fieldEdited(\"profile.about_me\", $event.target);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(52, \"aside\", 41)(53, \"span\", 42);\n          i0.ɵɵtext(54, \"PREVIEW\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(55, \"profile-modal\", 43);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"button\", 44);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(57, \"svg\", 45);\n          i0.ɵɵelement(58, \"path\", 46);\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(59, \"span\", 47);\n          i0.ɵɵtext(60, \"Save\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"accept\", i0.ɵɵpureFunction0(11, _c0));\n          i0.ɵɵadvance(20);\n          i0.ɵɵproperty(\"value\", ctx.userdata.profile.display_name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.userdata.profile.pronouns);\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"formControl\", ctx.colorFormControl);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.userdata.profile.about_me);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"username\", ctx.userdata.username)(\"display_name\", ctx.userdata.profile.display_name)(\"profile_picture\", ctx.userdata.profile.avatar)(\"banner_color\", ctx.userdata.profile.profile_color)(\"pronouns\", ctx.userdata.profile.pronouns)(\"about_me\", ctx.userdata.profile.about_me);\n        }\n      },\n      dependencies: [i5.NgControlStatus, i5.FormControlDirective, i6.NgxColorsComponent, i6.NgxColorsTriggerDirective, i7.ProfileModal],\n      styles: [\"[_nghost-%COMP%]{display:contents}.profile-content[_ngcontent-%COMP%]{width:1193px;height:auto;display:flex;position:relative;align-self:flex-start;align-items:flex-start;margin-left:4%;border-radius:14px;flex-direction:column;justify-content:flex-start;background-color:#181818}.profile-text[_ngcontent-%COMP%]{color:#d8d7d7;margin-top:3%;margin-left:3%}.profile-container[_ngcontent-%COMP%]{flex:0 0 auto;width:412px;height:auto;display:flex;margin-top:2%;align-items:flex-start;margin-left:3%;margin-bottom:3%;flex-direction:column}.profile-avatar-change-wrapper[_ngcontent-%COMP%]{display:flex;position:relative;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-pointer[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-options[_ngcontent-%COMP%]{width:100%;display:flex;align-items:flex-start;flex-direction:row;justify-content:flex-start}.profile-button[_ngcontent-%COMP%]{color:#fff;width:185px;height:35px;display:flex;position:relative;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;margin-right:5%;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-confirmationbuttons-buttoncolor)}.profile-button[_ngcontent-%COMP%]:hover{background-color:var(--dl-color-confirmationbuttons-buttonhover)}.profile-button[_ngcontent-%COMP%]:active{background-color:var(--dl-color-confirmationbuttons-buttonactive)}.profile-button[_ngcontent-%COMP%]:disabled{color:transparent;background-color:var(--dl-color-confirmationbuttons-buttondisabled)}.profile-icon[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:30px;height:30px;align-self:center}.profile-text01[_ngcontent-%COMP%]{left:42px;color:var(--dl-color-maincolors-headingcolor);right:1rem;margin:auto;position:absolute;line-height:1}.profile-button1[_ngcontent-%COMP%]{color:#fff;width:185px;height:40px;display:flex;position:relative;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;margin-right:5%;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-cancellationbuttons-cancelbuttoncolor)}.profile-button1[_ngcontent-%COMP%]:hover{background-color:var(--dl-color-cancellationbuttons-cancelbuttonhover)}.profile-button1[_ngcontent-%COMP%]:active{background-color:var(--dl-color-cancellationbuttons-cancelbuttonactive)}.profile-icon02[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:28px;height:28px;align-self:center}.profile-text02[_ngcontent-%COMP%]{left:42px;color:var(--dl-color-maincolors-headingcolor);right:1rem;position:absolute;align-self:center;text-align:center;line-height:1}.profile-container1[_ngcontent-%COMP%]{display:flex;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text03[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textinput[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-headingcolor);width:366px;height:47px;border-width:0px;border-radius:8px;background-color:#121212}.profile-container2[_ngcontent-%COMP%]{display:flex;margin-top:10%;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-text04[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textinput1[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-headingcolor);width:366px;height:47px;border-width:0px;border-radius:8px;background-color:#121212}.profile-container3[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-text05[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-container4[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;flex-direction:row;justify-content:flex-start}.profile-container5[_ngcontent-%COMP%]{flex:0 0 auto;width:auto;display:flex;align-items:center;flex-direction:column;justify-content:center}.profile-button2[_ngcontent-%COMP%]{color:transparent;width:115px;height:83px;display:flex;align-items:center;border-width:0px;border-radius:8px;flex-direction:column;justify-content:center;background-color:#fb3838}.profile-icon04[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px}.profile-text06[_ngcontent-%COMP%]{margin-top:4%}.profile-container6[_ngcontent-%COMP%]{flex:0 0 auto;width:auto;display:flex;align-items:center;margin-left:5%;flex-direction:column;justify-content:center}.profile-button3[_ngcontent-%COMP%]{color:transparent;width:115px;height:83px;display:flex;align-items:center;border-width:0px;border-radius:8px;flex-direction:column;justify-content:flex-start;background-color:#555}.profile-icon06[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px;align-self:flex-end;margin-right:-.5rem}.profile-icon08[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px;opacity:0}.profile-text07[_ngcontent-%COMP%]{margin-top:4%}.profile-container7[_ngcontent-%COMP%]{display:flex;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text08[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textarea[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-headingcolor);width:365px;height:145px;text-align:left;border-width:0px;padding:1rem;border-radius:8px;background-color:#121212}.profile-container8[_ngcontent-%COMP%]{top:95px;right:31px;display:flex;position:absolute;align-self:flex-end;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text09[_ngcontent-%COMP%]{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:2%}.profile-button4[_ngcontent-%COMP%]{top:16px;color:#fff;right:18px;width:110px;height:37px;display:flex;position:absolute;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-confirmationbuttons-buttoncolor)}.profile-button4[_ngcontent-%COMP%]:hover{background-color:var(--dl-color-confirmationbuttons-buttonhover)}.profile-button4[_ngcontent-%COMP%]:active{background-color:var(--dl-color-confirmationbuttons-buttonactive)}.profile-button4[_ngcontent-%COMP%]:disabled{color:transparent;background-color:var(--dl-color-confirmationbuttons-buttondisabled)}.profile-icon10[_ngcontent-%COMP%]{fill:var(--dl-color-maincolors-headingcolor);width:22px;height:22px}.profile-text10[_ngcontent-%COMP%]{top:5px;left:53px;color:var(--dl-color-maincolors-headingcolor);margin:auto;position:absolute}@media (max-width: 991px){.profile-text02[_ngcontent-%COMP%]{position:static}}@media (max-width: 479px){.profile-button[_ngcontent-%COMP%], .profile-button1[_ngcontent-%COMP%]{left:0;right:0;width:85%;position:static;margin-top:6%}.profile-text02[_ngcontent-%COMP%]{inset:0;width:auto;height:auto;position:static}.profile-button4[_ngcontent-%COMP%]{left:0;right:0;width:85%;position:static;margin-top:6%}}.edit-username-loader[_ngcontent-%COMP%]{width:100%;height:100%;color:#fff;position:relative;align-items:center;justify-content:center;border-radius:14px;display:block;z-index:5;top:-.025cm}.hidden[_ngcontent-%COMP%]{display:none}\"]\n    });\n  }\n  return Profile;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Profile, [{\n    type: Component,\n    args: [{\n      selector: 'app-profile',\n      inputs: ['userdata', 'getUserData'],\n      template: \"<div class=\\\"profile-content\\\">\\n  <h1 class=\\\"profile-text notselectable\\\">Profile</h1>\\n  <div class=\\\"profile-container\\\">\\n      <input id=\\\"avatar\\\" type=\\\"file\\\" [accept]='[\\\".jpeg\\\", \\\".jpg\\\", \\\".png\\\"]' class=\\\"hidden\\\" (change)=\\\"changeAvatar($event)\\\"/>\\n      <div class=\\\"profile-avatar-change-wrapper\\\">\\n      <span class=\\\"profile-pointer notselectable\\\">AVATAR</span>\\n      <div class=\\\"profile-options\\\">\\n        <button id=\\\"upload\\\" (click)=\\\"pickAvatar()\\\" type=\\\"button\\\" class=\\\"profile-button button\\\">\\n          <svg id=\\\"upload-icon\\\" viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon\\\">\\n            <path\\n              d=\\\"M214 768h596v86h-596v-86zM384 682v-256h-170l298-298 298 298h-170v256h-256z\\\"\\n            ></path>\\n          </svg>\\n          <span id=\\\"upload-text\\\" class=\\\"profile-text01\\\">Upload Avatar</span>\\n            <div id=\\\"upload-loader\\\" class=\\\"edit-username-loader\\\"></div>\\n        </button>\\n        <button id=\\\"reset\\\" (click)=\\\"resetAvatar()\\\" type=\\\"button\\\" class=\\\"profile-button1 button\\\">\\n          <svg id=\\\"reset-icon\\\" viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon02\\\">\\n            <path\\n              d=\\\"M726 666l-154-154 154-154-60-60-154 154-154-154-60 60 154 154-154 154 60 60 154-154 154 154zM512 86q176 0 301 125t125 301-125 301-301 125-301-125-125-301 125-301 301-125z\\\"\\n            ></path>\\n          </svg>\\n          <span id=\\\"reset-text\\\" class=\\\"profile-text02\\\">Reset Avatar</span>\\n            <div id=\\\"reset-loader\\\" class=\\\"edit-username-loader\\\"></div>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"profile-container1\\\">\\n      <span class=\\\"profile-text03 notselectable\\\">DISPLAY NAME</span>\\n      <input\\n        type=\\\"text\\\"\\n        id=\\\"display_name\\\"\\n        placeholder=\\\"John Doe\\\"\\n        [value]=\\\"userdata.profile.display_name\\\"\\n        (change)=\\\"fieldEdited('profile.display_name', $event.target)\\\"\\n        class=\\\"profile-textinput input\\\"\\n      />\\n    </div>\\n    <div class=\\\"profile-container2\\\">\\n      <span class=\\\"profile-text04 notselectable\\\">PRONOUNS</span>\\n      <input\\n        type=\\\"text\\\"\\n        id=\\\"pronouns\\\"\\n        placeholder=\\\"he/him, they/them etc...\\\"\\n        [value]=\\\"userdata.profile.pronouns\\\"\\n        (change)=\\\"fieldEdited('profile.pronouns', $event.target)\\\"\\n        class=\\\"profile-textinput1 input\\\"\\n      />\\n    </div>\\n    <div class=\\\"profile-container3\\\">\\n      <span class=\\\"profile-text05 notselectable\\\">BANNER COLOR</span>\\n      <div class=\\\"profile-container4\\\">\\n        <div class=\\\"profile-container5\\\">\\n          <button id=\\\"select_default\\\" class=\\\"profile-button2 button\\\">\\n            <svg viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon04\\\">\\n              <path\\n                d=\\\"M864 128l-480 480-224-224-160 160 384 384 640-640z\\\"\\n              ></path>\\n            </svg>\\n          </button>\\n          <span class=\\\"profile-text06\\\">Default</span>\\n        </div>\\n        <div class=\\\"profile-container6\\\">\\n          <button (click)=\\\"selectColor()\\\" id=\\\"pick_custom_color\\\" class=\\\"profile-button3 button\\\">\\n            <svg viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon06\\\">\\n              <path\\n                d=\\\"M296 810l344-344-82-82-344 344zM884 240q30 30 0 60l-134 134 82 82-60 60-60-60-382 380h-202v-202l380-382-60-60 60-60 82 82 134-134q12-12 30-12t30 12z\\\"\\n              ></path></svg\\n            ><svg viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon08\\\">\\n              <path\\n                d=\\\"M864 128l-480 480-224-224-160 160 384 384 640-640z\\\"\\n              ></path>\\n            </svg>\\n          </button>\\n          <span class=\\\"profile-text07\\\">Custom</span>\\n            <ngx-colors ngx-colors-trigger style=\\\"display: none; visibility: 0; position: absolute; width: 115px; height: 83px;\\\" (open)=\\\"openColorPicker\\\" [formControl]=\\\"colorFormControl\\\"></ngx-colors>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"profile-container7\\\">\\n      <span class=\\\"profile-text08 notselectable\\\">ABOUT ME</span>\\n      <textarea\\n        id=\\\"about_me\\\"\\n        maxlength=\\\"200\\\"\\n        placeholder=\\\"Say what you want everyone to know about you here, as long as it's within 200 characters.\\\"\\n        [value]=\\\"userdata.profile.about_me\\\"\\n        (change)=\\\"fieldEdited('profile.about_me', $event.target)\\\"\\n        class=\\\"profile-textarea textarea\\\"\\n      ></textarea>\\n    </div>\\n  </div>\\n  <aside class=\\\"profile-container8\\\">\\n    <span class=\\\"profile-text09 notselectable\\\">PREVIEW</span>\\n    <profile-modal\\n      [username]=\\\"userdata.username\\\"\\n      [display_name]=\\\"userdata.profile.display_name\\\"\\n      [profile_picture]=\\\"userdata.profile.avatar\\\"\\n      [banner_color]=\\\"userdata.profile.profile_color\\\"\\n      [pronouns]=\\\"userdata.profile.pronouns\\\"\\n      [about_me]=\\\"userdata.profile.about_me\\\"\\n    ></profile-modal>\\n  </aside>\\n  <button id=\\\"save\\\" type=\\\"button\\\" class=\\\"profile-button4 button\\\">\\n    <svg viewBox=\\\"0 0 1024 1024\\\" class=\\\"profile-icon10\\\">\\n      <path\\n        d=\\\"M426 726l384-384-60-62-324 324-152-152-60 60zM512 86q176 0 301 125t125 301-125 301-301 125-301-125-125-301 125-301 301-125z\\\"\\n      ></path>\\n    </svg>\\n    <span class=\\\"profile-text10\\\">Save</span>\\n  </button>\\n</div>\\n\",\n      styles: [\":host{display:contents}.profile-content{width:1193px;height:auto;display:flex;position:relative;align-self:flex-start;align-items:flex-start;margin-left:4%;border-radius:14px;flex-direction:column;justify-content:flex-start;background-color:#181818}.profile-text{color:#d8d7d7;margin-top:3%;margin-left:3%}.profile-container{flex:0 0 auto;width:412px;height:auto;display:flex;margin-top:2%;align-items:flex-start;margin-left:3%;margin-bottom:3%;flex-direction:column}.profile-avatar-change-wrapper{display:flex;position:relative;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-pointer{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-options{width:100%;display:flex;align-items:flex-start;flex-direction:row;justify-content:flex-start}.profile-button{color:#fff;width:185px;height:35px;display:flex;position:relative;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;margin-right:5%;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-confirmationbuttons-buttoncolor)}.profile-button:hover{background-color:var(--dl-color-confirmationbuttons-buttonhover)}.profile-button:active{background-color:var(--dl-color-confirmationbuttons-buttonactive)}.profile-button:disabled{color:transparent;background-color:var(--dl-color-confirmationbuttons-buttondisabled)}.profile-icon{fill:var(--dl-color-maincolors-headingcolor);width:30px;height:30px;align-self:center}.profile-text01{left:42px;color:var(--dl-color-maincolors-headingcolor);right:1rem;margin:auto;position:absolute;line-height:1}.profile-button1{color:#fff;width:185px;height:40px;display:flex;position:relative;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;margin-right:5%;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-cancellationbuttons-cancelbuttoncolor)}.profile-button1:hover{background-color:var(--dl-color-cancellationbuttons-cancelbuttonhover)}.profile-button1:active{background-color:var(--dl-color-cancellationbuttons-cancelbuttonactive)}.profile-icon02{fill:var(--dl-color-maincolors-headingcolor);width:28px;height:28px;align-self:center}.profile-text02{left:42px;color:var(--dl-color-maincolors-headingcolor);right:1rem;position:absolute;align-self:center;text-align:center;line-height:1}.profile-container1{display:flex;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text03{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textinput{color:var(--dl-color-maincolors-headingcolor);width:366px;height:47px;border-width:0px;border-radius:8px;background-color:#121212}.profile-container2{display:flex;margin-top:10%;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-text04{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textinput1{color:var(--dl-color-maincolors-headingcolor);width:366px;height:47px;border-width:0px;border-radius:8px;background-color:#121212}.profile-container3{display:flex;align-items:flex-start;margin-bottom:10%;flex-direction:column;justify-content:flex-start}.profile-text05{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-container4{width:100%;display:flex;align-items:center;flex-direction:row;justify-content:flex-start}.profile-container5{flex:0 0 auto;width:auto;display:flex;align-items:center;flex-direction:column;justify-content:center}.profile-button2{color:transparent;width:115px;height:83px;display:flex;align-items:center;border-width:0px;border-radius:8px;flex-direction:column;justify-content:center;background-color:#fb3838}.profile-icon04{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px}.profile-text06{margin-top:4%}.profile-container6{flex:0 0 auto;width:auto;display:flex;align-items:center;margin-left:5%;flex-direction:column;justify-content:center}.profile-button3{color:transparent;width:115px;height:83px;display:flex;align-items:center;border-width:0px;border-radius:8px;flex-direction:column;justify-content:flex-start;background-color:#555}.profile-icon06{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px;align-self:flex-end;margin-right:-.5rem}.profile-icon08{fill:var(--dl-color-maincolors-headingcolor);width:24px;height:24px;opacity:0}.profile-text07{margin-top:4%}.profile-container7{display:flex;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text08{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:3%}.profile-textarea{color:var(--dl-color-maincolors-headingcolor);width:365px;height:145px;text-align:left;border-width:0px;padding:1rem;border-radius:8px;background-color:#121212}.profile-container8{top:95px;right:31px;display:flex;position:absolute;align-self:flex-end;align-items:flex-start;flex-direction:column;justify-content:flex-start}.profile-text09{color:var(--dl-color-maincolors-textcolor);font-style:normal;font-weight:700;margin-bottom:2%}.profile-button4{top:16px;color:#fff;right:18px;width:110px;height:37px;display:flex;position:absolute;align-self:center;font-style:normal;text-align:center;transition:.3s;align-items:center;font-family:Roboto;font-weight:500;line-height:1.7;border-width:0px;border-radius:var(--dl-radius-radius-radius8);flex-direction:row;justify-content:flex-start;background-color:var(--dl-color-confirmationbuttons-buttoncolor)}.profile-button4:hover{background-color:var(--dl-color-confirmationbuttons-buttonhover)}.profile-button4:active{background-color:var(--dl-color-confirmationbuttons-buttonactive)}.profile-button4:disabled{color:transparent;background-color:var(--dl-color-confirmationbuttons-buttondisabled)}.profile-icon10{fill:var(--dl-color-maincolors-headingcolor);width:22px;height:22px}.profile-text10{top:5px;left:53px;color:var(--dl-color-maincolors-headingcolor);margin:auto;position:absolute}@media (max-width: 991px){.profile-text02{position:static}}@media (max-width: 479px){.profile-button,.profile-button1{left:0;right:0;width:85%;position:static;margin-top:6%}.profile-text02{inset:0;width:auto;height:auto;position:static}.profile-button4{left:0;right:0;width:85%;position:static;margin-top:6%}}.edit-username-loader{width:100%;height:100%;color:#fff;position:relative;align-items:center;justify-content:center;border-radius:14px;display:block;z-index:5;top:-.025cm}.hidden{display:none}\\n\"]\n    }]\n  }], () => [{\n    type: i1.PopupService\n  }, {\n    type: i2.MatSnackBar\n  }, {\n    type: i3.NgHcaptchaService\n  }, {\n    type: i4.CookieService\n  }], {\n    userdata: [{\n      type: Input\n    }],\n    getUserData: [{\n      type: Input\n    }]\n  });\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(Profile, {\n    className: \"Profile\",\n    filePath: \"src\\\\app\\\\components\\\\pages\\\\profile\\\\profile.component.ts\",\n    lineNumber: 17\n  });\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}